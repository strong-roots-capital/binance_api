/* 
 * Binance REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Depth {
  #[serde(rename = "lastUpdateId")]
  last_update_id: f32,
  #[serde(rename = "bids")]
  bids: Vec<Vec<String>>,
  #[serde(rename = "asks")]
  asks: Vec<Vec<String>>
}

impl Depth {
  pub fn new(last_update_id: f32, bids: Vec<Vec<String>>, asks: Vec<Vec<String>>) -> Depth {
    Depth {
      last_update_id: last_update_id,
      bids: bids,
      asks: asks
    }
  }

  pub fn set_last_update_id(&mut self, last_update_id: f32) {
    self.last_update_id = last_update_id;
  }

  pub fn with_last_update_id(mut self, last_update_id: f32) -> Depth {
    self.last_update_id = last_update_id;
    self
  }

  pub fn last_update_id(&self) -> &f32 {
    &self.last_update_id
  }


  pub fn set_bids(&mut self, bids: Vec<Vec<String>>) {
    self.bids = bids;
  }

  pub fn with_bids(mut self, bids: Vec<Vec<String>>) -> Depth {
    self.bids = bids;
    self
  }

  pub fn bids(&self) -> &Vec<Vec<String>> {
    &self.bids
  }


  pub fn set_asks(&mut self, asks: Vec<Vec<String>>) {
    self.asks = asks;
  }

  pub fn with_asks(mut self, asks: Vec<Vec<String>>) -> Depth {
    self.asks = asks;
    self
  }

  pub fn asks(&self) -> &Vec<Vec<String>> {
    &self.asks
  }


}



